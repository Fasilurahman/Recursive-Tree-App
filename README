Recursive Node Tree App

   A full-stack MERN application for managing a hierarchical tree of nodes, featuring a responsive UI with add, edit, delete functionality. 
   Built with TypeScript, React, Vite, Tailwind CSS, MongoDB Atlas, and InversifyJS for dependency injection.


Features

    Hierarchical Tree Structure: Organize nodes in a parent-child hierarchy.
    Node Operations:
        Add child nodes.
        Edit node.
        Delete nodes and their descendants.
        Expand/collapse folders.
    Responsive UI: Clean, animated interface with Tailwind CSS and Framer Motion.
    Real-time Feedback: Toast notifications (sonner) for success and error messages.
    Type-Safe: Built with TypeScript for robust type checking.

Tech Stack

    Backend: Node.js, Express.js, TypeScript, MongoDB, InversifyJS
    Frontend: React, Vite, TypeScript, Tailwind CSS, sonner
    Architecture: Clean architecture (backend), component-based (frontend)


Project Structure
Backend
    src/
    application/ # Use cases
    domain/ # Entities and interfaces
    infrastructure/ # Database, DI, errors
    interfaces/ # Routes and controllers
    server.ts # Express server
    app.ts 

Frontend
    src/
    components/ # Button, Loader, NodeForm, NodeTree
    pages/ # Home.tsx
    hooks/ # useTreeData
    service/ # API calls 
    App.tsx # Main app
    index.css # Tailwind directives
    types.ts # Node interface


